{
    "openapi": "3.0.0",
    "info": {
        "title": "Comcin API",
        "description": "API documentation for the Coalition of Micro-lending and Cooperative Institutions in Nigeria (Comcin)",
        "contact": {
            "email": "support@comcin.ng"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/admin/admins": {
            "get": {
                "tags": [
                    "Admin - Admins"
                ],
                "summary": "Get all admins except the first",
                "description": "Fetches a paginated list of all admins, excluding the very first created admin.",
                "operationId": "bfedd9962eb6f074c3d94ee37b77acd6",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of admins retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "admin@example.com"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "admin"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 42
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Admins"
                ],
                "summary": "Create a new admin",
                "description": "Creates a new admin with name, email, password, and role.",
                "operationId": "ed6cef438ca1e2cef594d980c37a34c3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "jane@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "admin"
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/admins/{id}": {
            "put": {
                "tags": [
                    "Admin - Admins"
                ],
                "summary": "Update an admin",
                "description": "Updates an adminâ€™s details such as name, email, password, role, or status.",
                "operationId": "2a7ccfb7d79f4a52fafd44c3818a6fd5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane_new@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "super-admin"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "jane_new@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "super-admin"
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Admin not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin - Admins"
                ],
                "summary": "Delete an admin",
                "description": "Permanently delete an admin by ID (except the first super admin).",
                "operationId": "52e39449693565c13d5eaba59ccb85d9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the admin to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/admins/{id}/deactivate": {
            "patch": {
                "tags": [
                    "Admin - Admins"
                ],
                "summary": "Deactivate an admin",
                "description": "Mark an admin as inactive instead of deleting.",
                "operationId": "6368fd9472e2b13e974e23bdb040d666",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the admin to deactivate",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin deactivated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/dashboard": {
            "get": {
                "tags": [
                    "Admin - Dashboard"
                ],
                "summary": "Get admin dashboard data",
                "operationId": "getDashboardData",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/memberships": {
            "get": {
                "tags": [
                    "Admin - Dashboard"
                ],
                "summary": "Get admin membership data",
                "operationId": "getMembershipData",
                "responses": {
                    "200": {
                        "description": "Membership data retrieved successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/institutions": {
            "get": {
                "tags": [
                    "Admin - Dashboard"
                ],
                "summary": "Get admin institution data",
                "operationId": "getInstitutionData",
                "responses": {
                    "200": {
                        "description": "Institution data retrieved successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/applications/{user_id}": {
            "get": {
                "tags": [
                    "Admin - Applications"
                ],
                "summary": "Get single pending application",
                "operationId": "c50580bec7e9d4e2b015be16e605cb7a",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user/institution to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "application": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/applications/{user_id}/action": {
            "post": {
                "tags": [
                    "Admin - Applications"
                ],
                "summary": "Approve or Reject Institution Application",
                "operationId": "26b00020c6f64922da6ac1a6f4dd0536",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user/institution to act on",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "approve",
                                            "verifying",
                                            "reject"
                                        ],
                                        "example": "approve"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rejection_reason": {
                                        "type": "string",
                                        "example": "Incomplete documentation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Application approved successfully."
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/financials": {
            "get": {
                "tags": [
                    "Admin - Dashboard"
                ],
                "summary": "Get financial statistics",
                "description": "Returns key financial metrics such as total revenue, levies, pending dues, success rate, and monthly revenue trends.",
                "operationId": "6eb8b2587d568b62218d6e23f6dff4fe",
                "responses": {
                    "200": {
                        "description": "Financial statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 150000
                                        },
                                        "total_levies": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 45000
                                        },
                                        "pending_dues": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 25000
                                        },
                                        "succesful_payment_count": {
                                            "type": "integer",
                                            "example": 120
                                        },
                                        "total_transaction_count": {
                                            "type": "integer",
                                            "example": 150
                                        },
                                        "percentage_success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 80
                                        },
                                        "percentage_total_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 15.5
                                        },
                                        "percentage_total_levies": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 12.3
                                        },
                                        "percentage_pending_dues": {
                                            "type": "number",
                                            "format": "float",
                                            "example": -5.2
                                        },
                                        "monthly_revenue": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "month": {
                                                        "type": "string",
                                                        "example": "2025-03"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 30000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "all_charges": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Charges"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/notifications/{user_id}": {
            "get": {
                "tags": [
                    "Admin - Notifications"
                ],
                "summary": "Get notifications for a user",
                "operationId": "getNotifications",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to retrieve notifications for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notifications retrieved successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/admin/payment-methods": {
            "get": {
                "tags": [
                    "Admin - Payment Method"
                ],
                "summary": "Get all payment methods",
                "operationId": "b461ce745ca6e26c3166fc608dd90afa",
                "responses": {
                    "200": {
                        "description": "List of payment methods"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Payment Method"
                ],
                "summary": "Create a new payment method",
                "operationId": "f3b3d501e254251e23bd71c0e728b3e3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug",
                                    "logo",
                                    "mode",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo": {
                                        "type": "file"
                                    },
                                    "mode": {
                                        "type": "string",
                                        "enum": [
                                            "test",
                                            "live"
                                        ]
                                    },
                                    "test_public_key": {
                                        "type": "string"
                                    },
                                    "test_secret_key": {
                                        "type": "string"
                                    },
                                    "live_public_key": {
                                        "type": "string"
                                    },
                                    "live_secret_key": {
                                        "type": "string"
                                    },
                                    "account_name": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "bank_name": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "default": "NGN"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment method created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "payment_method": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/payment-methods/{id}": {
            "get": {
                "tags": [
                    "Admin - Payment Method"
                ],
                "summary": "Get a single payment method",
                "operationId": "eabf0476ed9db8374e9ee5acec6e812d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single payment method"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin - Payment Method"
                ],
                "summary": "Update a payment method",
                "operationId": "241668ebecfe0d98d4c83e579d25d092",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "mode"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo": {
                                        "type": "file"
                                    },
                                    "mode": {
                                        "type": "string",
                                        "enum": [
                                            "test",
                                            "live"
                                        ]
                                    },
                                    "test_public_key": {
                                        "type": "string"
                                    },
                                    "test_secret_key": {
                                        "type": "string"
                                    },
                                    "live_public_key": {
                                        "type": "string"
                                    },
                                    "live_secret_key": {
                                        "type": "string"
                                    },
                                    "account_name": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "bank_name": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment method updated successfully"
                    },
                    "404": {
                        "description": "Payment method not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin - Payment Method"
                ],
                "summary": "Delete a payment method",
                "operationId": "2637e400b41976b22cc4c395d5275b23",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Payment method deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/aadmin/settings/general": {
            "get": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Get general settings",
                "description": "Retrieve general settings such as organization name, logo, contact email, and phone number.",
                "operationId": "7e6f1386ae9b0cca2d0ea59a368df55c",
                "responses": {
                    "200": {
                        "description": "General settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "General settings retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "organization_name": {
                                                    "type": "string",
                                                    "example": "Comcin"
                                                },
                                                "logo": {
                                                    "type": "string",
                                                    "example": "uploads/settings/logo.png"
                                                },
                                                "contact_email": {
                                                    "type": "string",
                                                    "example": "info@comcin.org"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "+2348000000000"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/general": {
            "post": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Update general settings",
                "description": "Update general settings such as organization name, logo, contact email, and phone number.",
                "operationId": "b80f67c675d5b9d7eee1dbe65bb3536b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "organization_name",
                                    "contact_email",
                                    "phone_number"
                                ],
                                "properties": {
                                    "organization_name": {
                                        "type": "string",
                                        "example": "Comcin"
                                    },
                                    "logo": {
                                        "description": "Logo file (jpg, jpeg, png)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "contact_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "info@comcin.org"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+2348000000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "General settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "General settings updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/security": {
            "get": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Get Security Settings",
                "description": "Retrieve current security settings (2FA, password length, alert on failed attempt).",
                "operationId": "44d4cd617831d14f538ce1a0cc51e1b8",
                "responses": {
                    "200": {
                        "description": "Security settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "enable_2fa": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "min_password_length": {
                                            "type": "integer",
                                            "example": 8
                                        },
                                        "alert_on_failed_attempt": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Update Security Settings",
                "description": "Update security preferences such as 2FA, password length, and failed attempt alerts.",
                "operationId": "595a20c69e2f717b0f5816b43e21458e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enable_2fa": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "min_password_length": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "alert_on_failed_attempt": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Security settings updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/notifications": {
            "get": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Get Notification Preferences",
                "description": "Retrieve notification preferences such as new member alerts, payment confirmations, and compliance reminders.",
                "operationId": "7dae5fadae68ec5836d069c5f0384c97",
                "responses": {
                    "200": {
                        "description": "Notification preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "new_member": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "payment_confirmation": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "compliance_reminder": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Update Notification Preferences",
                "description": "Update preferences for receiving system notifications.",
                "operationId": "5da8e4f04c5e03d173951736f15561a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "new_member": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "payment_confirmation": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "compliance_reminder": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification preferences updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/super-admin": {
            "get": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Get Super Admin Settings",
                "description": "Retrieve Super Admin details like profile picture, email, and password update settings.",
                "operationId": "625717cf18bda09fd6d669863bfc08e2",
                "responses": {
                    "200": {
                        "description": "Super Admin settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "profile_picture": {
                                            "type": "string",
                                            "example": "uploads/profile/admin123.png"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "admin@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Update Super Admin Settings",
                "description": "Update Super Admin profile picture, email, or password.",
                "operationId": "0b742c9bb631acbc0ba6c1d3db3f0131",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "profile_picture": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "newadmin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "NewPassword123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "NewPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Super Admin settings updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/support-tickets": {
            "get": {
                "tags": [
                    "Admin - Support Tickets"
                ],
                "summary": "Get all support tickets with stats",
                "description": "Retrieve all support tickets with pagination and statistics (counts and weekly growth).",
                "operationId": "4c43bc31f3c79d36c4eb8a0dbb9bc7e4",
                "responses": {
                    "200": {
                        "description": "Support tickets retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Support tickets retrieved successfully"
                                        },
                                        "stats": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "resolved": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "pending": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "cancelled": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "growth": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "resolved": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pending": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "cancelled": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/support-tickets/{id}": {
            "get": {
                "tags": [
                    "Admin - Support Tickets"
                ],
                "summary": "View a single support ticket",
                "description": "Retrieve details of a specific support ticket by ID",
                "operationId": "06370e29a0ca5ea13a6c922fc9cd74f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Support ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Support ticket retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Support ticket retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Login issue"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "I cannot login to my account"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-15T12:34:56Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-16T08:45:23Z"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "johndoe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Support ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [Support] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/support-tickets/{id}/action": {
            "post": {
                "tags": [
                    "Admin - Support Tickets"
                ],
                "summary": "Approve or Reject a Support Ticket",
                "description": "Allows an admin to approve or reject a support ticket. No rejection reason is required.",
                "operationId": "e555e45033daa630d34b132054749c76",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Support Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "description": "Action to perform on the ticket",
                                        "type": "string",
                                        "enum": [
                                            "approve",
                                            "reject"
                                        ],
                                        "example": "approve"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ticket status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket approved successfully."
                                        },
                                        "ticket": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "approved"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid action provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Support ticket not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/testimonials": {
            "get": {
                "tags": [
                    "Admin - Testimonials"
                ],
                "summary": "Get all testimonials (admin only)",
                "operationId": "558e17bc65bf8f678b82d0cb52664fcf",
                "responses": {
                    "200": {
                        "description": "List of testimonials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Testimonials retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Testimonial"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Testimonials"
                ],
                "summary": "Create a new testimonial (admin only)",
                "operationId": "900ddbe6962bc9524dda5a96dc24b0eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "author_name",
                                    "author_email",
                                    "rating",
                                    "description"
                                ],
                                "properties": {
                                    "author_name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "author_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Great experience working with this team."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Testimonial created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Testimonial"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/testimonials/{id}": {
            "delete": {
                "tags": [
                    "Admin - Testimonials"
                ],
                "summary": "Delete a testimonial (admin only)",
                "operationId": "e3457b1e7704d135825b6dd0db157730",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the testimonial",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Testimonial deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Testimonial deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/testimonials/{id}/publish": {
            "patch": {
                "tags": [
                    "Admin - Testimonials"
                ],
                "summary": "Publish a testimonial (admin only)",
                "operationId": "098675394d231ed55048f04436983fc2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the testimonial",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Testimonial published successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Testimonial"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/members": {
            "get": {
                "tags": [
                    "Admin - Members"
                ],
                "summary": "Get all members except the first",
                "description": "Fetches a paginated list of all members.",
                "operationId": "f142a84269882d3a48d91ce76179d220",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of members retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "member@example.com"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "member"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 42
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Members"
                ],
                "summary": "Create a new member",
                "description": "Creates a new member with name, email, password, and role.",
                "operationId": "fa209ab8723b18d3d0c761c5426bb977",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "member"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "jane@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "member"
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/members/{id}": {
            "put": {
                "tags": [
                    "Admin - Members"
                ],
                "summary": "Update an member",
                "description": "Updates an memberâ€™s details such as name, email, password, role, or status.",
                "operationId": "1206a274633f6ecbbd0fe6598f1f04e4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane_new@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "member"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "jane_new@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "member"
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Admin not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin - Members"
                ],
                "summary": "Delete an member",
                "description": "Permanently delete an member by ID.",
                "operationId": "530eb8d5a8f5fde516db8e60e819f09c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the member to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/members/{id}/deactivate": {
            "patch": {
                "tags": [
                    "Admin - Members"
                ],
                "summary": "Deactivate an member",
                "description": "Mark an member as inactive instead of deleting.",
                "operationId": "275115b9604c87a2d915a63b4af925b5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the member to deactivate",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin deactivated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/website-content": {
            "get": {
                "tags": [
                    "Admin - Website Content"
                ],
                "summary": "Get all website content",
                "description": "Fetch all website content entries.",
                "operationId": "10d2b108e59c5ea3644210729211b001",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WebsiteContent"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin - Website Content"
                ],
                "summary": "Create website content",
                "description": "Create a new website content entry with optional media upload",
                "operationId": "cdd48f3eeb3ab0826b557f01a185d2ec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "section",
                                    "key",
                                    "value"
                                ],
                                "properties": {
                                    "section": {
                                        "type": "string",
                                        "example": "homepage"
                                    },
                                    "key": {
                                        "type": "string",
                                        "example": "hero_title"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "Welcome to our website"
                                    },
                                    "media": {
                                        "description": "Optional media file",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Website content created successfully"
                    }
                }
            }
        },
        "/api/v1/admin/website-content/{section}/{key}": {
            "get": {
                "tags": [
                    "Admin - Website Content"
                ],
                "summary": "Get website content by section and key",
                "operationId": "0f3c28ab93c9184e39d7212c5a983502",
                "parameters": [
                    {
                        "name": "section",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Website content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "section": {
                                            "type": "string"
                                        },
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        },
                                        "media": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Content not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin - Website Content"
                ],
                "summary": "Update website content",
                "description": "Update website content by section and key with optional media replacement",
                "operationId": "79c3bfaa50ffe5c12f8db1d61a12866b",
                "parameters": [
                    {
                        "name": "section",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "Updated website title"
                                    },
                                    "media": {
                                        "description": "Optional media file",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Website content updated successfully"
                    },
                    "404": {
                        "description": "Content not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin - Website Content"
                ],
                "summary": "Delete website content",
                "operationId": "bed17f722fbb054e08bdad77d511f003",
                "parameters": [
                    {
                        "name": "section",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Website content deleted successfully"
                    },
                    "404": {
                        "description": "Content not found"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "72da9856cfaf0c9d012815b263d9f6eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": []
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Request password reset",
                "operationId": "84c781babcdb94781e3cc26797a079f5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@comcin.ng"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent if user exists"
                    }
                }
            }
        },
        "/api/v1/verify-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify OTP",
                "operationId": "33ea3c539acf86558fdb6005efba8c3e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@comcin.ng"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified"
                    },
                    "400": {
                        "description": "Invalid OTP"
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password using OTP",
                "operationId": "bbf805f1862facb2ca5349b5a0453457",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@comcin.ng"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new institution and create a user account",
                "description": "Creates a user and institution record with uploaded files in a single transaction.",
                "operationId": "3ab1ff58e6d30faee19a7b6405b8a694",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "full_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "institution_name",
                                    "institution_type",
                                    "date_of_establishment",
                                    "registration_number",
                                    "regulatory_body",
                                    "operating_state",
                                    "designation",
                                    "official_email",
                                    "phone_number",
                                    "id_card",
                                    "certificate_of_registration",
                                    "operational_license",
                                    "payment_receipt",
                                    "membership_agreement",
                                    "terms_agreement"
                                ],
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "institution_name": {
                                        "type": "string",
                                        "example": "ABC Microfinance"
                                    },
                                    "institution_type": {
                                        "type": "string",
                                        "enum": [
                                            "Microfinance",
                                            "Cooperative",
                                            "Other"
                                        ],
                                        "example": "Microfinance"
                                    },
                                    "category_type": {
                                        "type": "string",
                                        "enum": [
                                            "unit",
                                            "state",
                                            "federal"
                                        ],
                                        "example": "state"
                                    },
                                    "date_of_establishment": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2020-05-15"
                                    },
                                    "registration_number": {
                                        "type": "string",
                                        "example": "REG-123456"
                                    },
                                    "regulatory_body": {
                                        "type": "string",
                                        "example": "Central Bank"
                                    },
                                    "operating_state": {
                                        "type": "string",
                                        "example": "Lagos"
                                    },
                                    "head_office": {
                                        "type": "string",
                                        "example": "123 Main Street, Lagos"
                                    },
                                    "business_operation_address": {
                                        "type": "string",
                                        "example": "45 Business Rd, Abuja"
                                    },
                                    "website_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://www.example.com"
                                    },
                                    "descriptions": {
                                        "type": "string",
                                        "example": "A cooperative offering microfinance services."
                                    },
                                    "designation": {
                                        "type": "string",
                                        "example": "CEO"
                                    },
                                    "official_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@abc.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+2348012345678"
                                    },
                                    "id_card": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "institution_logo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "certificate_of_registration": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "operational_license": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "constitution": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "latest_annual_report": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "letter_of_intent": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "board_resolution": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "passport_photograph": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "other_supporting_document": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "payment_receipt": {
                                        "description": "Optional payment receipt upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "membership_agreement": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "terms_agreement": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User and Institution created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User and Institution created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/verify-email/{user_uuid}/{otp}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify user email using UUID and OTP",
                "description": "Validates a user's email address using a UUID and OTP. Marks the account as verified if the code is valid and not expired.",
                "operationId": "d78b61e023de3a3110ea61b6e0feb27d",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "The UUID of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    },
                    {
                        "name": "otp",
                        "in": "path",
                        "description": "The one-time verification code sent to the user's email",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired verification code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid verification code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Account already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account already verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "123b6a1d11c0b146b02d569fe51da5a8",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/dashboard": {
            "get": {
                "tags": [
                    "Member - Dashboard"
                ],
                "summary": "Get Member Dashboard",
                "description": "Fetches the member's dashboard data including user and institution information.",
                "operationId": "e4e7870b334a9d656c39565e706fd06a",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of member dashboard data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "institution": {
                                            "$ref": "#/components/schemas/Institution"
                                        },
                                        "pending_charges_count": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "next_payment_charges": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Charges"
                                            }
                                        },
                                        "certificate_count": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "latest_certificate": {
                                            "$ref": "#/components/schemas/Certificate"
                                        },
                                        "pending_charges": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Charges"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/institution": {
            "get": {
                "tags": [
                    "Member - Dashboard"
                ],
                "summary": "Get Member Institution",
                "description": "Fetches the institution information of the authenticated member.",
                "operationId": "6316d6e0bde8d2a050e50ea30f62effd",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of institution data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Institution"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Institution not found"
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/edit-institution": {
            "post": {
                "tags": [
                    "Member - Update"
                ],
                "summary": "Edit institution details",
                "description": "Allows an authenticated user to edit and update their institution details along with uploading required files.",
                "operationId": "faed8960f749ef54a2ef0b7b0f5e21be",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "institution_name",
                                    "institution_type",
                                    "date_of_establishment",
                                    "registration_number",
                                    "regulatory_body",
                                    "operating_state",
                                    "id_card",
                                    "certificate_of_registration",
                                    "operational_license",
                                    "constitution"
                                ],
                                "properties": {
                                    "institution_name": {
                                        "type": "string",
                                        "example": "ABC Microfinance Bank"
                                    },
                                    "institution_type": {
                                        "type": "string",
                                        "enum": [
                                            "Microfinance",
                                            "Cooperative",
                                            "Other"
                                        ],
                                        "example": "Microfinance"
                                    },
                                    "category_type": {
                                        "type": "string",
                                        "enum": [
                                            "unit",
                                            "state",
                                            "federal"
                                        ],
                                        "example": "unit",
                                        "nullable": true
                                    },
                                    "date_of_establishment": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2010-06-15"
                                    },
                                    "registration_number": {
                                        "type": "string",
                                        "example": "REG-12345"
                                    },
                                    "regulatory_body": {
                                        "type": "string",
                                        "example": "CBN"
                                    },
                                    "operating_state": {
                                        "type": "string",
                                        "example": "Lagos"
                                    },
                                    "head_office": {
                                        "type": "string",
                                        "example": "12 Broad Street, Lagos"
                                    },
                                    "business_operation_address": {
                                        "type": "string",
                                        "example": "45 Market Road, Lagos"
                                    },
                                    "website_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://abc-mfb.com"
                                    },
                                    "descriptions": {
                                        "type": "string",
                                        "example": "Leading provider of financial inclusion services"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+2348012345678"
                                    },
                                    "institution_logo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "institution_banner": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "id_card": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "certificate_of_registration": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "operational_license": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "constitution": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "latest_annual_report": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "letter_of_intent": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "board_resolution": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "passport_photograph": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "other_supporting_document": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "membership_agreement": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "terms_agreement": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Institution updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Institution updated successfully"
                                        },
                                        "institution": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating institution"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/edit-institution/logo-banner": {
            "post": {
                "tags": [
                    "Member - Update"
                ],
                "summary": "Update Institution Logo and Banner",
                "description": "Allows an authenticated user to update their institution's logo and banner images.",
                "operationId": "775c5a74cd4dfaec07e44dc302da8e0b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "institution_logo": {
                                        "description": "Institution logo image file (JPEG or PNG)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "institution_banner": {
                                        "description": "Institution banner image file (JPEG or PNG)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Institution logo and banner updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Institution logo and banner updated successfully"
                                        },
                                        "institution": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating institution logo and banner"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/edit-profile": {
            "post": {
                "tags": [
                    "Member - Update"
                ],
                "summary": "Update User Profile",
                "description": "Allows an authenticated user to update their profile information including name, email, phone number, designation, and ID card.",
                "operationId": "695c0315b3f36f0e97b68e07c29a0670",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "member@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+2348012345678"
                                    },
                                    "designation": {
                                        "type": "string",
                                        "example": "Manager"
                                    },
                                    "id_card": {
                                        "description": "ID card image or PDF file (JPEG, PNG, or PDF)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User profile updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating user profile"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/financials": {
            "get": {
                "tags": [
                    "Member - Dashboard"
                ],
                "summary": "Get Member Financials",
                "description": "Fetches the financial information of the authenticated member including pending and paid charges.",
                "operationId": "a622eab899d61d41464f2310b0b6182d",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of financial data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pending_charges": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Charges"
                                            }
                                        },
                                        "paid_charges": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Charges"
                                            }
                                        },
                                        "total_pending_amount": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100
                                        },
                                        "total_paid_amount": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Institution not found"
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/certificates": {
            "get": {
                "tags": [
                    "Member - Dashboard"
                ],
                "summary": "Get Member Certificates",
                "description": "Fetches the certificates associated with the authenticated member.",
                "operationId": "ed7157679782e3cba8364876a73815f4",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of certificates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Certificate"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No certificates found"
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/notifications": {
            "get": {
                "tags": [
                    "Member - Dashboard"
                ],
                "summary": "Get Member Notifications",
                "description": "Fetches the notifications for the authenticated member.",
                "operationId": "19415f698767e3fea5282d8b1d9717f4",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/notifications/mark-as-read": {
            "post": {
                "tags": [
                    "Member - Dashboard"
                ],
                "summary": "Mark Notification as Read",
                "description": "Marks a notification as read for the authenticated member.",
                "operationId": "dfc21d4b7b975b79ddc06090d60bcabf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "notification_id"
                                ],
                                "properties": {
                                    "notification_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification marked as read successfully"
                    },
                    "404": {
                        "description": "Notification not found"
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/payment": {
            "get": {
                "tags": [
                    "Member - Payments"
                ],
                "summary": "Get Payment Methods",
                "description": "Fetches all active payment methods available for the member.",
                "operationId": "91956e6deabcab2c609d061b82d1d16c",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of payment methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentMethod"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while fetching payment methods"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/member/payment/paystack/verify": {
            "post": {
                "tags": [
                    "Member - Payments"
                ],
                "summary": "Verify Paystack Payment",
                "description": "Verifies a Paystack payment using the transaction reference.",
                "operationId": "bbc735b974dc83b5bd69673713c063b8",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "query",
                        "description": "The Paystack transaction reference to verify",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful verification of Paystack payment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid or missing reference",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid reference"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while verifying payment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/member/payment/manual": {
            "post": {
                "tags": [
                    "Member - Payments"
                ],
                "summary": "Record Manual Payment",
                "description": "Records a manual payment made by the member.",
                "operationId": "9878f8cb7ff163b93fdafc35433f4da5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "member_id",
                                    "amount",
                                    "receipt"
                                ],
                                "properties": {
                                    "member_id": {
                                        "description": "ID of the member making the payment",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "charge_id": {
                                        "description": "ID of the charge being paid (optional)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "description": "Amount being paid",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "receipt": {
                                        "description": "Receipt file for the payment",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Manual payment recorded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Manual payment recorded successfully"
                                        },
                                        "charge": {
                                            "$ref": "#/components/schemas/Charges"
                                        },
                                        "transaction": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, charge does not belong to this member",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Charge does not belong to this member"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, user must be authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/member/support/tickets": {
            "get": {
                "tags": [
                    "Member - Support Tickets"
                ],
                "summary": "Get All Support Tickets",
                "description": "Retrieves all support tickets for the authenticated member.",
                "operationId": "4d93c68e2ac2867710b830a6d608e6c4",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of support tickets."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Member - Support Tickets"
                ],
                "summary": "Create Support Ticket",
                "description": "Creates a new support ticket for the authenticated member.",
                "operationId": "22014d96eeb61386f642312f8f8f0c51",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "subject": {
                                        "type": "string",
                                        "example": "Issue with Membership"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "I am having issues with my membership renewal."
                                    },
                                    "attachment": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Support ticket created successfully."
                    },
                    "400": {
                        "description": "Bad Request - Validation errors or missing fields."
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/member/support/tickets/{uuid}": {
            "get": {
                "tags": [
                    "Member - Support Tickets"
                ],
                "summary": "Get Support Ticket",
                "description": "Retrieves a specific support ticket by UUID for the authenticated member.",
                "operationId": "4d7a6a870cc3c51be00ab26d75b8f3e6",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The UUID of the support ticket.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the support ticket."
                    },
                    "404": {
                        "description": "Support ticket not found."
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Certificate": {
                "required": [
                    "id",
                    "user_id",
                    "title",
                    "issued_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Membership Certificate"
                    },
                    "description": {
                        "type": "string",
                        "example": "Certificate of Membership"
                    },
                    "issued_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T10:00:00Z"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T10:00:00Z"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "expired"
                        ],
                        "example": "active"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "uploads/certificates/certificate12345.pdf"
                    }
                },
                "type": "object"
            },
            "Charges": {
                "required": [
                    "id",
                    "member_id",
                    "title",
                    "type",
                    "amount"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "member_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Monthly Dues"
                    },
                    "description": {
                        "type": "string",
                        "example": "Monthly membership dues"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "due",
                            "levy",
                            "fine"
                        ],
                        "example": "due"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "unpaid",
                            "paid"
                        ],
                        "example": "unpaid"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-11"
                    },
                    "paid_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T10:00:00Z"
                    },
                    "created_by": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Institution": {
                "required": [
                    "institution_name",
                    "institution_type",
                    "registration_number"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "institution_name": {
                        "type": "string",
                        "example": "ABC Microfinance"
                    },
                    "institution_type": {
                        "type": "string",
                        "enum": [
                            "Microfinance",
                            "Cooperative",
                            "Other"
                        ],
                        "example": "Microfinance"
                    },
                    "category_type": {
                        "type": "string",
                        "enum": [
                            "Unit",
                            "State",
                            "Federal"
                        ],
                        "example": "Unit"
                    },
                    "date_of_establishment": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-05-15"
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "REG-123456"
                    },
                    "regulatory_body": {
                        "type": "string",
                        "example": "Central Bank"
                    },
                    "operating_state": {
                        "type": "string",
                        "example": "Lagos"
                    },
                    "head_office": {
                        "type": "string",
                        "example": "123 Main Street, Lagos"
                    },
                    "business_operation_address": {
                        "type": "string",
                        "example": "45 Business Rd, Abuja"
                    },
                    "website_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://www.example.com"
                    },
                    "descriptions": {
                        "type": "string",
                        "example": "A cooperative offering microfinance services."
                    },
                    "institution_logo": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/logo.png"
                    },
                    "institution_banner": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/banner.png"
                    },
                    "certificate_of_registration": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/certificate.pdf"
                    },
                    "operational_license": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/license.pdf"
                    },
                    "constitution": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/constitution.pdf"
                    },
                    "latest_annual_report": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/annual_report.pdf"
                    },
                    "letter_of_intent": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/letter_of_intent.pdf"
                    },
                    "board_resolution": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/board_resolution.pdf"
                    },
                    "passport_photograph": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/passport.jpg"
                    },
                    "other_supporting_document": {
                        "type": "string",
                        "example": "uploads/institutions/uuid/supporting_doc.pdf"
                    },
                    "membership_agreement": {
                        "type": "boolean",
                        "example": true
                    },
                    "terms_agreement": {
                        "type": "boolean",
                        "example": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "verifying",
                            "approved",
                            "rejected"
                        ],
                        "example": "pending"
                    },
                    "is_approved": {
                        "type": "integer",
                        "example": 0
                    },
                    "rejection_reason": {
                        "type": "string",
                        "example": "Incomplete documents",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "title": "Notification",
                "description": "Notification model for storing messages sent to users",
                "required": [
                    "user_id",
                    "title",
                    "type",
                    "category",
                    "reference",
                    "content",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "ID of the user the notification belongs to",
                        "type": "integer",
                        "example": 5
                    },
                    "created_by": {
                        "description": "Admin or officer who created the notification",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "Short title of the notification",
                        "type": "string",
                        "example": "Payment Confirmation"
                    },
                    "type": {
                        "description": "Type of notification",
                        "type": "string",
                        "enum": [
                            "info",
                            "warning",
                            "error"
                        ],
                        "example": "info"
                    },
                    "category": {
                        "description": "Category of notification",
                        "type": "string",
                        "enum": [
                            "system",
                            "user",
                            "transaction",
                            "application"
                        ],
                        "example": "transaction"
                    },
                    "reference": {
                        "description": "Unique reference for the notification",
                        "type": "string",
                        "example": "NOTIF-20250807-XYZ123"
                    },
                    "read_at": {
                        "description": "Timestamp when the notification was read",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-07T14:30:00Z",
                        "nullable": true
                    },
                    "content": {
                        "description": "Detailed message body of the notification",
                        "type": "string",
                        "example": "Your payment has been confirmed. Thank you."
                    },
                    "view_status": {
                        "description": "View status of the notification. 0 = Not viewed, 1 = Viewed",
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-08-07T13:00:00Z",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-08-07T13:00:00Z"
                    }
                },
                "type": "object"
            },
            "PaymentMethod": {
                "title": "PaymentMethod",
                "required": [
                    "name",
                    "slug",
                    "mode"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "paystack",
                            "bank-tansfer"
                        ],
                        "example": "paystack"
                    },
                    "slug": {
                        "type": "string",
                        "example": "paystack"
                    },
                    "logo": {
                        "type": "string",
                        "example": "uploads/payment_methods/paystack.png",
                        "nullable": true
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "test",
                            "live"
                        ],
                        "example": "test"
                    },
                    "test_public_key": {
                        "type": "string",
                        "example": "pk_test_1234567890"
                    },
                    "test_secret_key": {
                        "type": "string",
                        "example": "sk_test_1234567890"
                    },
                    "live_public_key": {
                        "type": "string",
                        "example": "pk_live_1234567890"
                    },
                    "live_secret_key": {
                        "type": "string",
                        "example": "sk_live_1234567890"
                    },
                    "account_name": {
                        "type": "string",
                        "example": "Comcin Ltd",
                        "nullable": true
                    },
                    "account_number": {
                        "type": "string",
                        "example": "1234567890",
                        "nullable": true
                    },
                    "bank_name": {
                        "type": "string",
                        "example": "First Bank",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string",
                        "example": "NGN"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Support": {
                "required": [
                    "uuid",
                    "user_id",
                    "name",
                    "email",
                    "subject",
                    "message",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "uuid": {
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "member@example.com"
                    },
                    "subject": {
                        "type": "string",
                        "example": "Issue with Membership"
                    },
                    "message": {
                        "type": "string",
                        "example": "I am having trouble accessing my membership benefits."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "resolved",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "attachment": {
                        "type": "string",
                        "example": "uploads/support/attachment.png",
                        "nullable": true
                    },
                    "resolved_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-17T12:00:00Z",
                        "nullable": true
                    },
                    "cancelled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-17T12:00:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-17T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-17T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "Testimonial": {
                "title": "Testimonial",
                "description": "A user testimonial entry",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "author_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "author_email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com",
                        "nullable": true
                    },
                    "rating": {
                        "description": "Rating value from 1 to 5",
                        "type": "integer",
                        "format": "int32",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 5
                    },
                    "description": {
                        "description": "The testimonial content",
                        "type": "string",
                        "example": "This platform has really improved my workflow!"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "published"
                        ],
                        "example": "published"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-08-16T12:45:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-08-16T12:55:00Z"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "required": [
                    "member_id",
                    "amount",
                    "transaction_type",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "member_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "charge_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "reference": {
                        "type": "string",
                        "example": "TXN-20250807-XYZ123"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "transaction_type": {
                        "type": "string",
                        "enum": [
                            "deposit",
                            "withdrawal",
                            "transfer"
                        ],
                        "example": "deposit"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ],
                        "example": "completed"
                    },
                    "description": {
                        "type": "string",
                        "example": "Payment for monthly dues"
                    },
                    "payment_method_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "receipt_file": {
                        "type": "string",
                        "example": "uploads/receipts/txn12345.png",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_uid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "member"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "uploads/avatars/uuid/avatar.png"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+2348012345678"
                    },
                    "designation": {
                        "type": "string",
                        "example": "Manager"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "WebsiteContent": {
                "title": "Website Content",
                "required": [
                    "section",
                    "key",
                    "value"
                ],
                "properties": {
                    "section": {
                        "type": "string",
                        "example": "homepage"
                    },
                    "key": {
                        "type": "string",
                        "example": "hero_title"
                    },
                    "value": {
                        "type": "string",
                        "example": "Welcome to our website"
                    },
                    "media": {
                        "type": "string",
                        "example": "uploads/website/hero_banner.png",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format **Bearer &lt;token&gt;**",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication related endpoints"
        },
        {
            "name": "Admin - Admins",
            "description": "Admin - Admins"
        },
        {
            "name": "Admin - Dashboard",
            "description": "Admin - Dashboard"
        },
        {
            "name": "Admin - Applications",
            "description": "Admin - Applications"
        },
        {
            "name": "Admin - Notifications",
            "description": "Admin - Notifications"
        },
        {
            "name": "Admin - Payment Method",
            "description": "Admin - Payment Method"
        },
        {
            "name": "Admin - Settings",
            "description": "Admin - Settings"
        },
        {
            "name": "Admin - Support Tickets",
            "description": "Admin - Support Tickets"
        },
        {
            "name": "Admin - Testimonials",
            "description": "Admin - Testimonials"
        },
        {
            "name": "Admin - Members",
            "description": "Admin - Members"
        },
        {
            "name": "Admin - Website Content",
            "description": "Admin - Website Content"
        },
        {
            "name": "Member - Dashboard",
            "description": "Member - Dashboard"
        },
        {
            "name": "Member - Update",
            "description": "Member - Update"
        },
        {
            "name": "Member - Payments",
            "description": "Member - Payments"
        },
        {
            "name": "Member - Support Tickets",
            "description": "Member - Support Tickets"
        }
    ]
}